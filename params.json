{
  "name": "Markovian Tweet Generator",
  "tagline": "",
  "body": " \r\n#Markovian Tweet Generator\r\n\r\nThis project works by consuming a text file that has some sample text and generates meaningful sentences a.k.a tweets with <145 characters.\r\nThe different components that were designed as part of the tweet generator included the following-\r\n\r\n* The File Handler- For taking in the file, opening it and parsing through the sample text.\r\n\r\n* The Hash Map which performed the following- \r\n   -Parses through a given string to build a word character by character.\r\n   -Generates the key (word) and value(frequency of words) pairs for a given sample text.\r\n   -Generates a map of the words based on the key and value.\r\n   -Takes care of all conditions and exceptions while populating the map.\r\n\r\n* Tweet Generator which did the following-\r\n  -Take in the file with the sample text and creates the mapping for the words in this text as described in the Hash Map  \r\n   block.\r\n  - This block creates a tweet based on the likelihood of words from the map.\r\n  - The tweet generated will be less than 145 characters, where, based on a random value an iteration through the list of\r\n    values takes place. \r\n    The random value is generated based on the the total frequencies in the list of values produced in Hash Map.\r\n    This iteration will look for values whose frequency, added to the previous frequencies hits the\r\n    threshold of the random value.\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}